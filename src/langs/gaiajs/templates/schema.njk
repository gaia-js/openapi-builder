/**
 * generated by template generator. don't modify it.
 *
 */

import { Context } from 'egg';
import Schema from '17zy_egg-gaiajs/app/lib/schema';

{% for refType in utils.refTypesForSchemaObject(schema) -%}
import {{refType}} from '../types/{{refType}}';
{% endfor -%}
export default class {{name}} extends Schema {
  {% for name, field in schema.properties -%}
  /**
{% if field.description %}   * {{field.description}}
{% endif %}   *
   * @type {{utils.typeFor(field)}}
   * @memberof {{name}}
   */
  {{name}}: {{utils.typeFor(field)}};

  {% endfor -%}
  constructor(data: any, ctx?: Context) {
    super(data, ctx);
    {% for name, field in schema.properties %}
    Object.defineProperty(this, '{{name}}', {
      enumerable: true,
      value: data.{{name}},
    });
    {%- endfor %}
  }

  async toJSON() {
    {% from "./macros.njk" import assignValue, value, prepareValue with context -%}
    {{ prepareValue('this', schema, true) }}
    return {{ value('this', schema, true) }};
  }
}
