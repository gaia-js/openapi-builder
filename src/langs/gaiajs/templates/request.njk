/**
 * generated by template generator. don't modify it.
 *
 */

import { Context } from 'egg';
import GaiaRequest from '17zy_egg-gaiajs/app/lib/request';
{% for refType in utils.refTypes(request) -%}
import {{refType}} from '../types/{{refType}}';
{% endfor %}
/**
 * path: {{url}}
 *{%- if request.summary %} {{request.summary}}{% endif %}
 *{%- if request.description %} {{request.description}}{% endif %}
 */
export default class {{request.name}}Request extends GaiaRequest {
  static accessorName = '{{request.name}}';
  static path = '{{request.path}}';
  static method = '{{request.method | upper}}';

  {% for field in request.parameters -%}
  /**
{% if field.description %}   * {{field.description}}
{% endif %}   *
   * @type {{utils.typeFor(field.schema)}}
   * @memberof {{request.name}}
   */
  {{field.name}}{% if required === false %}?{% endif %}: {{utils.typeFor(field.schema)}};

  {% endfor -%}

  constructor(params: any, ctx: Context) {
    super(params, ctx);

    {%- for field in request.parameters %}
    this.{{field.name}} = {% if utils.typeFor(field.schema) == "number" -%}
      {% if field.in === 'query' %}ctx.query{% elif field.in === 'body' %}ctx.request.body{% elif field.in === 'path' %}ctx.params{% else %}params{% endif %}.{{field.name}} && Number({% if field.in === 'query' %}ctx.query{% elif field.in === 'body' %}ctx.request.body{% elif field.in === 'path' %}ctx.params{% else %}params{% endif %}.{{field.name}})
      {%- else -%}
      {% if field.in === 'query' %}ctx.query{% elif field.in === 'body' %}ctx.request.body{% elif field.in === 'path' %}ctx.params{% else %}params{% endif %}.{{field.name}}
      {%- endif %};
    {%- endfor %}

    {%- if request.parameters and request.parameters.length > 0 %}

    const rule = {
      {%- for field in request.parameters %}
      {{field.name}}: { type: '{{utils.primitiveType(field.schema)}}', required: {{field.required}} },
      {%- endfor %}
    };
    try {
      ctx.validate(rule, this);
    } catch (err) {
      ctx.service.error.throwRequestValidateError(err);
    }
    {%- endif %}
  }
}
