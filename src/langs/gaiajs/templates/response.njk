/**
 * generated by template generator. don't modify it.
 *
 */

import GaiaResponse from '17zy_egg-gaiajs/app/lib/response';

import { Context } from 'egg';

{% for refType in utils.refTypesForSchemaObject(schema) %}
import {{refType}} from '../types/{{refType}}';
{% endfor %}

/**
 * {{response.description}}
 */
export default class {{name}}Response extends GaiaResponse {
  {% for name, field in schema.properties %}
  // {{field.description}}
  {{name}}: {{utils.typeFor(field)}};
  {% endfor %}

  dump(): any {
    return super.output({
      {%- for name, field in schema.properties %}
      {{name}}: {% if field.type === 'array' and field.items.$ref -%}
        this.{{name}}.map(item=>item.dump())
        {%- elif field.$ref -%}
        this.{{name}}.dump()
        {%- else -%}
        this.{{name}}
        {%- endif %},
      {%- endfor %}
    });
  }
}
