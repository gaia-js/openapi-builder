/**
 * generated by template generator. don't modify it.
 *
 */

import { Context } from 'egg';
import GaiaResponse from '17zy_egg-gaiajs/app/lib/response';
{% for refType in utils.refTypesForSchemaObject(schema) %}
import {{refType}} from '../types/{{refType}}';
{%- endfor %}
/**
 *{% if response.description %} {{response.description}}{% endif %}
 */
export default class {{name}}Response extends GaiaResponse {
  {% for name, field in schema.properties -%}
  /**
{% if field.description %}   * {{field.description}}
{% endif %}   *
   * @type {{utils.typeFor(field)}}
   * @memberof {{name}}
   */
  {{name}}: {{utils.typeFor(field)}};

  {% endfor -%}
  constructor(data: any, ctx?: Context) {
    super(data, ctx);

  }

  async dump(): Promise<any> {
    {% from "./macros.njk" import assignValue, value, prepareValue with context -%}
    {{ prepareValue('this', schema, true) }}
    return {{ value('this', schema, true) }};
  }
}
